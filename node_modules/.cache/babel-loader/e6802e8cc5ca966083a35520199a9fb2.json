{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/double-dog-mobile/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport adapter from './adapter';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\nconst playButton = document.getElementById(\"play-button\");\nconst shotButton = document.getElementById(\"shot-button\");\nconst passButton = document.getElementById(\"pass-button\");\nconst addPlayer = document.getElementById(\"add-player-field\");\nconst addPlayerForm = document.getElementById(\"add-player-form\");\nconst playerNameField = document.getElementById(\"add-player-field\"); //change to implient timer and coin flip\n\nconst buttons = document.getElementById(\"buttons\");\nconst showDare = document.getElementById(\"dares\");\nconst playerDareButton = document.getElementById(\"player-dares\");\nconst allDaresButton = document.getElementById(\"game-dares\");\nconst scoreboard = document.getElementById(\"scoreboard\");\nconst homeButton = document.getElementById(\"home\");\nconst ruleButton = document.getElementById(\"rules\");\nconst turnPlayer = document.getElementById(\"turn-player\");\nconst playerScore = document.getElementById(\"game-score\");\nconst playerShots = document.getElementById(\"shots-count\");\nconst disclaimer = \"KNOW YOUR LIMIT: Double Dog Dare is designed as an adult “drinking game” but may be played without consumption of alcohol. We do not recommend misuse of alcohol including excessive consumption, binge-drinking, drinking and driving/boating, and/or underage drinking. It is the players’ responsibility to monitor and moderate their alcohol consumption. We recommend that all players make adequate arrangements for their personal safety and transportation BEFORE playing.\";\nvar winScore;\nvar eventSpace;\nvar listOfDares = [];\nvar listOfGames = [];\nvar previousDares = [];\nvar recentDares = [];\nvar gameId = 0;\nvar currentDare = {};\nvar currentId = -1;\nvar currentPlayers = {};\nvar listOfPlayerTurns = {};\nvar listOfPlayersTurns = {};\nvar listOfGameTurns = {};\nvar randomPlayer = {};\nvar selectedPlayer = {};\nvar currentPlayer = currentPlayers[currentId];\naddPlayer.focus(); //class construstion\n\nclass Player {\n  constructor(id, name, score, shots) {\n    this.id = id;\n    this.name = name;\n    this.score = score;\n    this.shots = shots;\n  } //additional class methods\n\n\n  addScore() {\n    this.score += currentDare.points;\n  }\n\n  subtractScore() {\n    this.score -= currentDare.points;\n  }\n\n  addShot() {\n    this.shots += currentDare.shots;\n  }\n\n} //to be called on load\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  fetchDares();\n  startGame();\n  alert(disclaimer);\n}); //click event(s) for play button\n\ngameTurns(playButton, doneDare); //funcion to see if game is finished\n\nfunction gameWon() {\n  if (currentPlayer.score >= winScore) {\n    alert(\"Game OVER\\n\" + currentPlayer.name + \" has won the game!!\\n refresh the page to start a new game\");\n    playButton.disabled = true;\n    shotButton.disabled = true;\n    passButton.disabled = true;\n  }\n} //click event(s) for shot button\n\n\ngameTurns(shotButton, shotDare); //click event(s) for pass button\n\npassButton.addEventListener(\"click\", passDare, false);\npassButton.addEventListener(\"click\", getScoreboard, false); //click event for add player button \n\naddPlayerForm.addEventListener('submit', e => {\n  e.preventDefault();\n  let player = playerNameField.value;\n  player = capitalizeWord(player);\n  let newPlayer = {\n    name: player\n  };\n\n  if (player) {\n    adapter.createPlayer(newPlayer, gameId).then(res => {\n      //enable elements\n      fetchPlayers();\n      playerNameField.value = \"\";\n      playerNameField.placeholder = \"Add a Player\";\n      alert(player + \" was added\");\n    });\n    playButton.disabled = false;\n  } else {\n    alert(\"Please ener a name\");\n  }\n}); //creates a game, triggered on page load\n\nfunction startGame() {\n  adapter.createGame().then(res => {\n    fetchGame();\n  });\n} //capitalize first letter in player names\n\n\nfunction capitalizeWord(string) {\n  const s = string.toLowerCase();\n  return s.charAt(0).toUpperCase() + s.slice(1);\n} //fuctions to create and retrieve turns\n\n\nfunction gameTurns(button, buttonFunction) {\n  button.addEventListener(\"click\", buttonFunction, false);\n  button.addEventListener(\"click\", getScoreboard, false);\n  button.addEventListener(\"click\", function () {\n    generateDare(listOfDares);\n  }, false);\n  button.addEventListener(\"click\", function () {\n    createTurn();\n  }, false);\n} //reveal past dares in info space\n\n\nfunction showGameDares() {\n  var pastDares = [];\n  let currentName = \"\";\n  let currentText = \"\";\n\n  for (let i = 0; i < listOfGameTurns.length; i++) {\n    currentName = Object.values(currentPlayers).find(x => x.id == listOfPlayerTurns[listOfGameTurns[i].player_turn_id - 1].player_id).name;\n    currentText = listOfDares.find(x => x.id == listOfPlayerTurns.find(t => t.id == [listOfGameTurns[i].player_turn_id]).dare_id).text;\n    pastDares += `\n \t\t<span> \n \t\t\tturn: ${i + 1}<br>\n \t\t\tplayer: ${currentName}<br>\n\t\t\t\t\n \t\t\tdare: ${currentText}<br>\n\t\t\t<br>\n \t\t</span>\n \t`;\n  }\n\n  showDare.innerHTML = `<div id =\"info\"> <h1>All Past Dares</h1><br>` + pastDares + `</div>`;\n}\n\nfunction showPlayersDares() {\n  var playerDares = [];\n\n  for (let i = 0; i < listOfPlayersTurns.length; i++) {\n    playerDares += `\n \t\t<span> \n \t\t\tturn: ${i + 1}<br><br>\n \t\t\tdare: ${listOfDares[listOfPlayersTurns[i].dare_id - 1].text}<br>\n\t\t\t<br>\n \t\t</span>\n \t`;\n  }\n\n  showDare.innerHTML = `<div id =\"info\"> <h1>Your Past Dares</h1><br>` + playerDares + `</div>`;\n}\n\nfunction showRules() {\n  showDare.innerHTML = `<div id =\"info\"> <h1>Rules</h1>\n \t\tWelcome to Double Dog Dare <br><br> The rules are simple first one to 10 points wins! The turns go in order from the first person added to the last. \n \t\tWhen it is your turn you have the choice of: <br><br>  1.(PLAY) Doing the dare and gaining the points (if your dare involves another person that does not consent see notes). <br><br> 2.(SHOT) Taking the penalty shot(s)\n \t\tallowing you to pass the dare without losing any points. <br><br> 3.(PASS) Passing the dare avoiding the penalty shot(s) but also losing the losing the \n \t\tsame amount of points you would have gained(only if you have enough points to do so).  <br><br> **notes** <br> If you can not complete your own dare for any reason other than another persons involvement(including conflictions with previous dares) you MUST choose SHOT or PASS <br><br>\n \t\tIf you choose to not participate in any dare that is not your own you must take a shot and the the turn player may gain the points <br><br>\n \t\t</div>`;\n}\n\nfunction createTurn() {\n  adapter.createPlayerTurn(currentPlayer.id, currentDare.id).then(res => {\n    fetchPlayerTurns();\n    fetchPlayersTurns();\n  });\n}\n\nfunction createGameTurn() {\n  adapter.createGameTurn(gameId, listOfPlayerTurns[listOfPlayerTurns.length - 1].id).then(res => {\n    fetchGameTurns();\n  });\n}\n\nfunction getScoreboard() {\n  var theScore = [];\n\n  for (let i = 0; i < Object.keys(currentPlayers).length; i++) {\n    theScore += `\n \t\t<span> \n \t\t\t${currentPlayers[i].name}<br>\n \t\t\tscore: ${currentPlayers[i].score}<br>\n\t\t\tshots: ${currentPlayers[i].shots}<br>\n\t\t\t<br>\n \t\t</span>\n \t`;\n  }\n\n  showDare.innerHTML = `<div id =\"info\"> <h1>Scoreboard</h1>` + theScore + `</div>`;\n}\n\nfunction clickHome() {\n  homeButton.firstChild.classList.add('circle icon');\n  homeButton.firstChild.classList.add('circle outline icon');\n}\n\nfunction getHome() {\n  showDare.innerHTML = currentDare.text + `<br><br><span>points: </span>` + currentDare.points + `<br> <span>penalty shot(s): </span>` + currentDare.shots;\n}\n\nfunction doneDare() {\n  if (previousDares.length >= 1) {\n    if (currentPlayer.score + currentDare.points < 0) {\n      alert(\"you dont have enough points!\\n You will be given a new dare!!\");\n    } else if (currentPlayer.score + currentDare.points >= winScore) {\n      currentPlayer.addScore();\n      gameWon();\n    } else {\n      currentPlayer.addScore();\n      TurnPlayer();\n    }\n\n    playerScore.innerHTML = currentPlayer.score;\n  } else {\n    shotButton.disabled = false;\n    passButton.disabled = false; // buttons for scoreboard, rules, player dares, and game dares\n\n    playerDareButton.addEventListener(\"click\", showPlayersDares, false);\n    allDaresButton.addEventListener(\"click\", showGameDares, false);\n    ruleButton.addEventListener(\"click\", showRules, false);\n    scoreboard.addEventListener(\"click\", getScoreboard, false);\n    homeButton.addEventListener(\"click\", getHome, false);\n    TurnPlayer();\n  }\n}\n\nfunction shotDare() {\n  if (buttons.childNodes.length >= 7) {\n    removeEvent();\n    playButton.disabled = false;\n  } else {\n    currentPlayer.addShot();\n    getScoreboard();\n    TurnPlayer();\n  }\n}\n\nfunction passDare() {\n  if (currentPlayer.score <= 0) {\n    alert(\"you dont have any points! \\nYou will have to do the dare or take the penalty shot(s).\");\n  } else if (currentPlayer.score - currentDare.points < 0) {\n    alert(\"you dont have enough points to pass this dare! \\nYou will have to do the dare or take the penalty shot(s).\");\n  } else if (currentDare.points < 0) {\n    currentPlayer.addScore();\n    playerScore.innerHTML = currentPlayer.score;\n    getScoreboard();\n    TurnPlayer();\n    generateDare(listOfDares);\n    createTurn();\n  } else if (buttons.childNodes.length >= 7) {\n    removeEvent();\n    playButton.disabled = false;\n  } else {\n    currentPlayer.subtractScore();\n    playerScore.innerHTML = currentPlayer.score;\n    getScoreboard();\n    TurnPlayer();\n    generateDare(listOfDares);\n    createTurn();\n  }\n} //cycles through the list of players\n\n\nfunction TurnPlayer() {\n  if (currentId >= Object.keys(currentPlayers).length - 1) {\n    currentId = -1;\n  }\n\n  currentId++;\n  currentPlayer = currentPlayers[currentId];\n  turnPlayer.innerHTML = \"Turn Player: \" + currentPlayer.name;\n  playerScore.innerHTML = currentPlayer.score;\n  playerShots.innerHTML = currentPlayer.shots;\n} //retieves game id\n\n\nfunction fetchGame() {\n  adapter.getGame().then(games => retrieveGame(games));\n} //collects dares from backend.\n\n\nfunction fetchDares() {\n  adapter.getDares().then(dares => retrieveDares(dares));\n} //collects players from backend.\n\n\nfunction fetchPlayers() {\n  adapter.getPlayers(gameId).then(players => retrievePlayers(players));\n} //collects player turns from backend.\n\n\nfunction fetchPlayerTurns() {\n  adapter.getPlayerTurns().then(playerTurns => retrievePlayerTurns(playerTurns));\n} //collects certain player turns\n\n\nfunction fetchPlayersTurns() {\n  adapter.getPlayerTurns().then(playerTurns => retrievePlayersTurns(playerTurns));\n} //collects game turns from backend.\n\n\nfunction fetchGameTurns() {\n  adapter.getGameTurns(gameId).then(gameTurns => retrieveGameTurns(gameTurns));\n}\n\nfunction retrieveGame(games) {\n  listOfGames = [];\n  games.forEach(game => {\n    listOfGames.push(game);\n  });\n  gameId = listOfGames[listOfGames.length - 1].id;\n  winScore = listOfGames[listOfGames.length - 1].winScore;\n} //all loaded Dares\n\n\nfunction retrieveDares(dares) {\n  let dareList = [];\n  dares.forEach(dare => {\n    dareList.push(dare);\n  });\n  listOfDares = dareList;\n} //all loaded players\n\n\nfunction retrievePlayers(players) {\n  let i = 0;\n  players.forEach(player => {\n    currentPlayers[i] = new Player(player.id, player.name, player.score, player.shots);\n    i++;\n  });\n} //load player turns\n\n\nfunction retrievePlayerTurns(playerTurns) {\n  let playerTurnList = [];\n  playerTurns.forEach(turn => {\n    playerTurnList.push(turn);\n  });\n  listOfPlayerTurns = playerTurnList;\n  createGameTurn();\n} //load game turns \n\n\nfunction retrieveGameTurns(gameTurns) {\n  let gameTurnsList = [];\n  gameTurns.forEach(gameTurn => {\n    gameTurnsList.push(gameTurn);\n  });\n  listOfGameTurns = gameTurnsList;\n} //load current players turns\n\n\nfunction retrievePlayersTurns(playerTurns) {\n  let playersTurnList = [];\n  playerTurns.forEach(turn => {\n    if (turn.player_id == currentPlayer.id) {\n      playersTurnList.push(turn);\n    }\n  });\n  listOfPlayersTurns = playersTurnList;\n} //randomly selects a Player.\n\n\nfunction generatePlayer() {\n  return Math.floor(Math.random() * Object.keys(currentPlayers).length);\n}\n\nfunction generateEvent() {\n  var node = document.createElement(\"button\");\n  var node2 = document.createElement(\"I\");\n  node.setAttribute(\"id\", \"event-button\");\n  node.setAttribute(\"class\", \"ui button gray\");\n  var textnode = document.createTextNode(\"\");\n  node.appendChild(textnode);\n  buttons.appendChild(node);\n  eventSpace = document.getElementById(\"event-button\");\n}\n\nfunction removeEvent() {\n  buttons.removeChild(buttons.childNodes[6]);\n}\n\nfunction removelistener() {\n  eventSpace.removeEventListener(\"click\", function () {\n    startTimer(15, eventSpace);\n  }, false);\n} //randomly selects a dare.\n\n\nfunction generateDare() {\n  let ranDare = Math.floor(Math.random() * listOfDares.length);\n  currentDare = listOfDares[ranDare];\n  let dareText = currentDare.text; //checks to see if a random player needs to be inserted\n\n  if (recentDares.includes(currentDare.id)) {\n    console.log(currentDare.text);\n    console.log(\"dare recently occured, generating new one\");\n    generateDare();\n  } else {\n    if (currentDare.text.includes(\"15 seconds\")) {\n      playButton.disabled = true;\n      generateEvent();\n      eventSpace.textContent = \"Start Timer\";\n      eventSpace.addEventListener(\"click\", function () {\n        startTimer(15, eventSpace);\n      }, false);\n      removelistener();\n    } else if (currentDare.text.includes(\"a minute\")) {\n      playButton.disabled = true;\n      generateEvent();\n      eventSpace.textContent = \"Start Timer\";\n      eventSpace.addEventListener(\"click\", function () {\n        startTimer(60, eventSpace);\n      }, false);\n      removelistener();\n    } else if (currentDare.text.includes(\"Flip a coin\")) {\n      playButton.disabled = true;\n      generateEvent();\n      eventSpace.textContent = \"Flip A Coin\";\n      eventSpace.addEventListener(\"click\", function () {\n        coinFlip(4, eventSpace);\n      }, false);\n      removelistener();\n    } else if (currentDare.text.includes(\"x is the\") && currentPlayer.shots < 3) {\n      console.log(\"new dare was chosen\");\n      generateDare();\n    }\n\n    if (dareText.includes(\"[RandomPlayer]\")) {\n      randomPlayer = generatePlayer();\n      selectedPlayer = currentPlayers[randomPlayer]; //stops current player from being the random player\n\n      if (selectedPlayer.id == currentPlayer.id) {\n        while (selectedPlayer.id == currentPlayer.id) {\n          randomPlayer = generatePlayer();\n          selectedPlayer = currentPlayers[randomPlayer];\n        }\n      }\n\n      dareText = dareText.replace(\"[RandomPlayer]\", selectedPlayer.name);\n      currentDare.text = dareText;\n    }\n\n    showDare.innerHTML = currentDare.text + `<br><br><span>points: </span>` + currentDare.points + `<br> <span>penalty shot(s): </span>` + currentDare.shots;\n    dareArchive(currentDare);\n\n    if (listOfGameTurns.length >= 10) {\n      recentDares.shift();\n      recentDares.push(currentDare.id);\n    } else {\n      recentDares.push(currentDare.id);\n    }\n  }\n}\n\nfunction startTimer(duration, display) {\n  let timer = duration,\n      minutes,\n      seconds;\n  setInterval(function () {\n    minutes = parseInt(timer / 60, 10);\n    seconds = parseInt(timer % 60, 10);\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n    display.textContent = minutes + \":\" + seconds;\n\n    if (--timer <= -1) {\n      if (buttons.childNodes.length >= 7) {\n        removeEvent();\n        playButton.disabled = false;\n      }\n    }\n  }, 1000);\n}\n\nfunction coinFlip(duration, display) {\n  let timer = duration,\n      minutes,\n      seconds;\n  setInterval(function () {\n    minutes = parseInt(timer / 60, 10);\n    seconds = parseInt(timer % 60, 10);\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n    if (--timer <= -1) {\n      if (buttons.childNodes.length >= 7) {\n        removeEvent();\n        playButton.disabled = false;\n      }\n    } else if (timer == 3) {\n      display.textContent = display = Math.floor(Math.random() * 2) == 0 ? 'heads' : 'tails';\n    }\n  }, 1000);\n} //creates archive for all players of current game\n\n\nfunction dareArchive(currentDare) {\n  previousDares.push(currentDare);\n}","map":{"version":3,"sources":["/Users/marshoward/Development/code/double-dog-mobile/src/index.js"],"names":["React","ReactDOM","adapter","App","serviceWorker","render","document","getElementById","unregister","playButton","shotButton","passButton","addPlayer","addPlayerForm","playerNameField","buttons","showDare","playerDareButton","allDaresButton","scoreboard","homeButton","ruleButton","turnPlayer","playerScore","playerShots","disclaimer","winScore","eventSpace","listOfDares","listOfGames","previousDares","recentDares","gameId","currentDare","currentId","currentPlayers","listOfPlayerTurns","listOfPlayersTurns","listOfGameTurns","randomPlayer","selectedPlayer","currentPlayer","focus","Player","constructor","id","name","score","shots","addScore","points","subtractScore","addShot","addEventListener","fetchDares","startGame","alert","gameTurns","doneDare","gameWon","disabled","shotDare","passDare","getScoreboard","e","preventDefault","player","value","capitalizeWord","newPlayer","createPlayer","then","res","fetchPlayers","placeholder","createGame","fetchGame","string","s","toLowerCase","charAt","toUpperCase","slice","button","buttonFunction","generateDare","createTurn","showGameDares","pastDares","currentName","currentText","i","length","Object","values","find","x","player_turn_id","player_id","t","dare_id","text","innerHTML","showPlayersDares","playerDares","showRules","createPlayerTurn","fetchPlayerTurns","fetchPlayersTurns","createGameTurn","fetchGameTurns","theScore","keys","clickHome","firstChild","classList","add","getHome","TurnPlayer","childNodes","removeEvent","getGame","games","retrieveGame","getDares","dares","retrieveDares","getPlayers","players","retrievePlayers","getPlayerTurns","playerTurns","retrievePlayerTurns","retrievePlayersTurns","getGameTurns","retrieveGameTurns","forEach","game","push","dareList","dare","playerTurnList","turn","gameTurnsList","gameTurn","playersTurnList","generatePlayer","Math","floor","random","generateEvent","node","createElement","node2","setAttribute","textnode","createTextNode","appendChild","removeChild","removelistener","removeEventListener","startTimer","ranDare","dareText","includes","console","log","textContent","coinFlip","replace","dareArchive","shift","duration","display","timer","minutes","seconds","setInterval","parseInt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport adapter from './adapter'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconst playButton = document.getElementById(\"play-button\");\nconst shotButton = document.getElementById(\"shot-button\");\nconst passButton = document.getElementById(\"pass-button\");\n\n\nconst addPlayer = document.getElementById(\"add-player-field\");\nconst addPlayerForm = document.getElementById(\"add-player-form\")\nconst playerNameField = document.getElementById(\"add-player-field\")\n\n//change to implient timer and coin flip\nconst buttons = document.getElementById(\"buttons\")\nconst showDare = document.getElementById(\"dares\");\n\nconst playerDareButton = document.getElementById(\"player-dares\");\nconst allDaresButton = document.getElementById(\"game-dares\");\nconst scoreboard = document.getElementById(\"scoreboard\")\nconst homeButton = document.getElementById(\"home\");\nconst ruleButton = document.getElementById(\"rules\");\n\nconst turnPlayer = document.getElementById(\"turn-player\");\nconst playerScore = document.getElementById(\"game-score\");\nconst playerShots = document.getElementById(\"shots-count\");\n\n\nconst disclaimer =\"KNOW YOUR LIMIT: Double Dog Dare is designed as an adult “drinking game” but may be played without consumption of alcohol. We do not recommend misuse of alcohol including excessive consumption, binge-drinking, drinking and driving/boating, and/or underage drinking. It is the players’ responsibility to monitor and moderate their alcohol consumption. We recommend that all players make adequate arrangements for their personal safety and transportation BEFORE playing.\"\n\nvar winScore;\nvar eventSpace;\n\nvar listOfDares = [];\nvar listOfGames = [];\nvar previousDares = [];\nvar recentDares = [];\nvar gameId =0;\n\nvar currentDare = {};\nvar currentId = -1;\n\nvar currentPlayers = {};\nvar listOfPlayerTurns = {};\nvar listOfPlayersTurns = {};\nvar listOfGameTurns = {};\nvar randomPlayer = {};\nvar selectedPlayer = {};\n\n\nvar currentPlayer = currentPlayers[currentId];\n\naddPlayer.focus()\n\n\n//class construstion\nclass Player{\n\tconstructor(id, name, score, shots){\n\t\tthis.id = id;\n        this.name = name;\n        this.score = score;\n        this.shots = shots;\n\t}\n\n\t//additional class methods\n\taddScore() {\n\t\tthis.score += currentDare.points\n\t}\n\tsubtractScore(){\n\t\tthis.score -= currentDare.points\n\t}\n\taddShot(){\n\t\tthis.shots += currentDare.shots\n\t}\n}\n//to be called on load\ndocument.addEventListener('DOMContentLoaded', function(){\n \tfetchDares();\n \tstartGame();\n \talert(disclaimer)\n\n })\n\n//click event(s) for play button\ngameTurns(playButton,doneDare);\n\n\n//funcion to see if game is finished\nfunction gameWon(){\n\t\n\tif (currentPlayer.score >= winScore){\n\t\talert(\"Game OVER\\n\" + currentPlayer.name +\" has won the game!!\\n refresh the page to start a new game\")\n\t\tplayButton.disabled = true\n\t\tshotButton.disabled = true\n\t\tpassButton.disabled = true\n\t}\n}\n\n//click event(s) for shot button\ngameTurns(shotButton,shotDare);\n\n\n//click event(s) for pass button\n\tpassButton.addEventListener(\"click\", passDare,false);\n\tpassButton.addEventListener(\"click\", getScoreboard,false);\n//click event for add player button \naddPlayerForm.addEventListener('submit', e=> {\n\te.preventDefault()\n\n\tlet player = playerNameField.value\n\tplayer = capitalizeWord(player)\n\n\tlet newPlayer = {name: player}\n\n\tif(player){\n\t\tadapter.createPlayer(newPlayer,gameId).then(res=> {\n\t\t\t//enable elements\n\t\tfetchPlayers();\n\t\tplayerNameField.value = \"\"\n\t\tplayerNameField.placeholder=\"Add a Player\"\n\t\talert(player +\" was added\")\n\n\t\t\n\t\t})\n\t\tplayButton.disabled=false\n\t\t\n\t}\n\telse {\n\t\talert(\"Please ener a name\")\n\t}\n});\n\n//creates a game, triggered on page load\nfunction startGame(){\t\n\tadapter.createGame().then(res=> {\n\t\tfetchGame();\n\t})\t\n }\n\n\n//capitalize first letter in player names\nfunction capitalizeWord(string){\n\tconst s = string.toLowerCase()\n\treturn s.charAt(0).toUpperCase() + s.slice(1)\n}\n\n\n//fuctions to create and retrieve turns\nfunction gameTurns(button,buttonFunction){\n\tbutton.addEventListener(\"click\", buttonFunction,false);\n\tbutton.addEventListener(\"click\", getScoreboard,false);\n\tbutton.addEventListener(\"click\", function(){generateDare(listOfDares)},false);\n\tbutton.addEventListener(\"click\", function(){createTurn()},false);\n}\n\n//reveal past dares in info space\nfunction showGameDares(){\t\n\tvar pastDares = [];\n\tlet currentName = \"\"\n\tlet currentText = \"\"\n\tfor(let i = 0; i < listOfGameTurns.length; i++)\n\t{\t\n\n\t\tcurrentName = Object.values(currentPlayers).find(x => x.id == listOfPlayerTurns[listOfGameTurns[i].player_turn_id-1].player_id).name\n\t\tcurrentText = listOfDares.find(x => x.id == listOfPlayerTurns.find(t => t.id ==[listOfGameTurns[i].player_turn_id]).dare_id).text\n\n\t\t pastDares += `\n \t\t<span> \n \t\t\tturn: ${(i+1)}<br>\n \t\t\tplayer: ${currentName}<br>\n\t\t\t\t\n \t\t\tdare: ${currentText}<br>\n\t\t\t<br>\n \t\t</span>\n \t`\n\t}\n\tshowDare.innerHTML= `<div id =\"info\"> <h1>All Past Dares</h1><br>`+pastDares +`</div>`;\n}\n\nfunction showPlayersDares(){\n\tvar playerDares = [];\n\tfor(let i = 0; i < listOfPlayersTurns.length; i++)\n\t{\t\n\t\t playerDares += `\n \t\t<span> \n \t\t\tturn: ${(i+1)}<br><br>\n \t\t\tdare: ${listOfDares[(listOfPlayersTurns[i].dare_id-1)].text}<br>\n\t\t\t<br>\n \t\t</span>\n \t`\n\t}\n \tshowDare.innerHTML= `<div id =\"info\"> <h1>Your Past Dares</h1><br>`+playerDares +`</div>`;\n}\n\nfunction showRules(){\n\n\tshowDare.innerHTML= `<div id =\"info\"> <h1>Rules</h1>\n \t\tWelcome to Double Dog Dare <br><br> The rules are simple first one to 10 points wins! The turns go in order from the first person added to the last. \n \t\tWhen it is your turn you have the choice of: <br><br>  1.(PLAY) Doing the dare and gaining the points (if your dare involves another person that does not consent see notes). <br><br> 2.(SHOT) Taking the penalty shot(s)\n \t\tallowing you to pass the dare without losing any points. <br><br> 3.(PASS) Passing the dare avoiding the penalty shot(s) but also losing the losing the \n \t\tsame amount of points you would have gained(only if you have enough points to do so).  <br><br> **notes** <br> If you can not complete your own dare for any reason other than another persons involvement(including conflictions with previous dares) you MUST choose SHOT or PASS <br><br>\n \t\tIf you choose to not participate in any dare that is not your own you must take a shot and the the turn player may gain the points <br><br>\n \t\t</div>`;\n}\n\nfunction createTurn(){\n\tadapter.createPlayerTurn(currentPlayer.id, currentDare.id).then(res => {\n\t\tfetchPlayerTurns();\n\t\tfetchPlayersTurns();\n\t})\n}\n\nfunction createGameTurn(){\n\tadapter.createGameTurn(gameId,listOfPlayerTurns[listOfPlayerTurns.length-1].id).then (res => {\n\tfetchGameTurns();\n\t})\n}\n\n\n\nfunction getScoreboard(){\t\n\tvar theScore = [];\n\tfor(let i = 0; i < Object.keys(currentPlayers).length; i++)\n\t{\t\n\t\t theScore += `\n \t\t<span> \n \t\t\t${currentPlayers[i].name}<br>\n \t\t\tscore: ${currentPlayers[i].score}<br>\n\t\t\tshots: ${currentPlayers[i].shots}<br>\n\t\t\t<br>\n \t\t</span>\n \t`\n\t}\n\tshowDare.innerHTML= `<div id =\"info\"> <h1>Scoreboard</h1>`+theScore +`</div>`\n\n}\n\nfunction clickHome(){\n\thomeButton.firstChild.classList.add('circle icon');\n\thomeButton.firstChild.classList.add('circle outline icon');\t\n}\n\nfunction getHome(){\n\tshowDare.innerHTML = currentDare.text +\n\t\t`<br><br><span>points: </span>`+ currentDare.points + `<br> <span>penalty shot(s): </span>`+ currentDare.shots;\n}\n\n\nfunction doneDare(){\n\t if (previousDares.length >= 1){\n\t\tif ((currentPlayer.score + currentDare.points)<0) {\n\t\t\talert(\"you dont have enough points!\\n You will be given a new dare!!\")\n\t\t}\n\t\telse if (currentPlayer.score + currentDare.points >= winScore) {\n\t\t\tcurrentPlayer.addScore();\n\t\t \tgameWon()\t\n\t\t}\n\t\telse {\n\t\t\tcurrentPlayer.addScore();\n\t\t\tTurnPlayer();\n\t\t}\n\t\tplayerScore.innerHTML = currentPlayer.score\t\n\t}\n\telse{\n\t\tshotButton.disabled=false\n\t\tpassButton.disabled=false\n\t\t// buttons for scoreboard, rules, player dares, and game dares\n\t\n\t\tplayerDareButton.addEventListener(\"click\", showPlayersDares,false);\n\t\tallDaresButton.addEventListener(\"click\", showGameDares,false);\n\t\truleButton.addEventListener(\"click\", showRules,false);\n\t\tscoreboard.addEventListener(\"click\", getScoreboard,false);\n\t\thomeButton.addEventListener(\"click\", getHome,false)\n\t\tTurnPlayer();\n\t}\n\t\t\n}\n\nfunction shotDare(){\n\tif(buttons.childNodes.length>=7){\n\t\t removeEvent()\n\t\t playButton.disabled = false\n\t}\n\telse{\n\t\tcurrentPlayer.addShot()\n\t\tgetScoreboard()\n\t\tTurnPlayer();\n\t}\n}\n\nfunction passDare(){\n\tif (currentPlayer.score <=0) {\n\t\talert(\"you dont have any points! \\nYou will have to do the dare or take the penalty shot(s).\")\n\t}\n\telse if ((currentPlayer.score - currentDare.points)<0) {\n\t\talert(\"you dont have enough points to pass this dare! \\nYou will have to do the dare or take the penalty shot(s).\")\n\t}\n\telse if (currentDare.points < 0) {\n\t\tcurrentPlayer.addScore();\n\t\tplayerScore.innerHTML = currentPlayer.score;\n\t \n\t \tgetScoreboard();\n\t \tTurnPlayer();\n\t \tgenerateDare(listOfDares)\n\t\tcreateTurn()\n\t}\n\telse if (buttons.childNodes.length>=7){\n\t\t removeEvent()\n\t\t playButton.disabled = false\n\t}\n\telse{\n\t \tcurrentPlayer.subtractScore()\n\t \tplayerScore.innerHTML = currentPlayer.score;\n\t \t\n\t \tgetScoreboard();\n\t \tTurnPlayer();\n\t \tgenerateDare(listOfDares)\n\t\tcreateTurn()\n\t}\n}\n\n//cycles through the list of players\nfunction TurnPlayer(){\n\tif (currentId >= Object.keys(currentPlayers).length-1) {\n\t\tcurrentId = -1;\n\n\t}\n\tcurrentId ++\n\tcurrentPlayer = currentPlayers[currentId];\n\n\tturnPlayer.innerHTML = \"Turn Player: \"+ currentPlayer.name;\n\tplayerScore.innerHTML = currentPlayer.score;\n\tplayerShots.innerHTML = currentPlayer.shots;\n}\n\n\n//retieves game id\nfunction fetchGame(){\n\tadapter.getGame()\n\t.then(games => retrieveGame(games))\n}\n\n//collects dares from backend.\nfunction fetchDares() {\n\tadapter.getDares()\n\t.then(dares => retrieveDares(dares))\t\n}\n\n//collects players from backend.\nfunction fetchPlayers() {\n\tadapter.getPlayers(gameId)\n\t.then(players => retrievePlayers(players))\t\n}\n\n\n//collects player turns from backend.\nfunction fetchPlayerTurns(){\n\tadapter.getPlayerTurns()\n\t\t.then(playerTurns => retrievePlayerTurns(playerTurns))\n}\n\n//collects certain player turns\nfunction fetchPlayersTurns(){\n\tadapter.getPlayerTurns()\n\t\t.then(playerTurns => retrievePlayersTurns(playerTurns))\n}\n\n//collects game turns from backend.\nfunction fetchGameTurns(){\n\tadapter.getGameTurns(gameId)\n\t\t.then(gameTurns => retrieveGameTurns(gameTurns))\n}\n\nfunction  retrieveGame(games){\n\tlistOfGames = [];\n\tgames.forEach(game=> {\t\t\n\t\tlistOfGames.push(game);\t\n\t});\n\n\n\tgameId = listOfGames[(listOfGames.length-1)].id;\n\twinScore = listOfGames[(listOfGames.length-1)].winScore;\n\t\n\n\n}\n\n//all loaded Dares\nfunction  retrieveDares(dares){\n\tlet dareList = [];\n\tdares.forEach(dare=> {\t\t\n\t\tdareList.push(dare);\t\n\t});\n\tlistOfDares = dareList;\n}\n\n\n//all loaded players\nfunction  retrievePlayers(players){\n\tlet i = 0\n\tplayers.forEach(player=> {\t\t\n\t\tcurrentPlayers[i] = new Player(player.id, player.name, player.score, player.shots)\n\t\ti++\t\n\t});\n}\n\n//load player turns\nfunction retrievePlayerTurns(playerTurns){\n\tlet playerTurnList = [];\n\tplayerTurns.forEach(turn=>{\n\t\tplayerTurnList.push(turn)\n\t});\n\tlistOfPlayerTurns = playerTurnList;\n\tcreateGameTurn();\n}\n\n//load game turns \nfunction retrieveGameTurns(gameTurns){\n\tlet gameTurnsList = [];\n\tgameTurns.forEach(gameTurn=>{\n\t\tgameTurnsList.push(gameTurn)\n\t});\n\tlistOfGameTurns = gameTurnsList;\n}\n\n//load current players turns\nfunction retrievePlayersTurns(playerTurns){\n\tlet playersTurnList = [];\n\tplayerTurns.forEach(turn=>{\n\t\tif (turn.player_id == currentPlayer.id)\n\t\t{\n\t\t\tplayersTurnList.push(turn)\n\t\t}\n\t\t\n\t});\n\tlistOfPlayersTurns = playersTurnList;\n\t}\n\n//randomly selects a Player.\nfunction generatePlayer(){\n\treturn Math.floor(Math.random() * (Object.keys(currentPlayers).length));\n}\n\nfunction generateEvent(){\n\tvar node = document.createElement(\"button\");\n\tvar node2 = document.createElement(\"I\")\n\tnode.setAttribute(\"id\", \"event-button\");\n\tnode.setAttribute(\"class\", \"ui button gray\");\n\n\tvar textnode = document.createTextNode(\"\");\n\tnode.appendChild(textnode);\n\tbuttons.appendChild(node)\n\n\teventSpace = document.getElementById(\"event-button\");\n}\n\nfunction removeEvent(){\n\tbuttons.removeChild(buttons.childNodes[6]); \n}\n\nfunction removelistener(){\n\teventSpace.removeEventListener(\"click\", function(){startTimer(15, eventSpace)},false);\n}\n\n//randomly selects a dare.\nfunction generateDare()   \n {\t\t \n \tlet ranDare = Math.floor(Math.random() * (listOfDares.length));\n \tcurrentDare = listOfDares[ranDare];\t\n \tlet dareText = currentDare.text\n\n\t//checks to see if a random player needs to be inserted\n\tif(recentDares.includes(currentDare.id)){\n\t\tconsole.log(currentDare.text);\n\t\tconsole.log(\"dare recently occured, generating new one\");\n\t\tgenerateDare();\n\t}\n\telse{\n\t\tif (currentDare.text.includes(\"15 seconds\")){\n\t\t\tplayButton.disabled = true;\n    \t\tgenerateEvent();\n    \t\teventSpace.textContent = \"Start Timer\";\n    \t\teventSpace.addEventListener(\"click\", function(){startTimer(15, eventSpace)},false);\n    \t\tremovelistener();\n\t\t}\n\t\telse if (currentDare.text.includes(\"a minute\")){\n\t\t\tplayButton.disabled = true;\n    \t\tgenerateEvent();\n    \t\teventSpace.textContent = \"Start Timer\";\n    \t\teventSpace.addEventListener(\"click\", function(){startTimer(60, eventSpace)},false);\n    \t\tremovelistener();\n\t\t}\n\t\telse if (currentDare.text.includes(\"Flip a coin\")) {\n\t\t\tplayButton.disabled = true;\n\t\t\tgenerateEvent();\n    \t\teventSpace.textContent = \"Flip A Coin\";\n    \t\teventSpace.addEventListener(\"click\", function(){coinFlip(4, eventSpace)},false);\n    \t\tremovelistener();\n\n\t\t}\t\n\t\telse if (currentDare.text.includes(\"x is the\") && currentPlayer.shots < 3){\n\t\n\t\t\t\tconsole.log(\"new dare was chosen\")\n\t\t\t\tgenerateDare();\t\n\t\t}\n\t\tif (dareText.includes(\"[RandomPlayer]\")){\n\t\t\trandomPlayer=  generatePlayer();\n\t\t\tselectedPlayer = currentPlayers[randomPlayer];\n\t\t\t//stops current player from being the random player\n\t\t\tif (selectedPlayer.id == currentPlayer.id){\n\t\t\t\twhile (selectedPlayer.id == currentPlayer.id){\n\t\t\t\t\trandomPlayer=  generatePlayer();\n\t\t\t\t\tselectedPlayer = currentPlayers[randomPlayer];\n\t\t\t\t}\n\t\t\t}\n\t\t\tdareText = dareText.replace(\"[RandomPlayer]\", selectedPlayer.name);\n\t\t\tcurrentDare.text= dareText\n\t\t}\n\t\t\n\t \t\n\t\tshowDare.innerHTML = currentDare.text +\n\t\t`<br><br><span>points: </span>`+ currentDare.points + `<br> <span>penalty shot(s): </span>`+ currentDare.shots;\n\t\tdareArchive(currentDare);\n\t\n\t\tif (listOfGameTurns.length >= 10){\n\t\trecentDares.shift();\n\t\trecentDares.push(currentDare.id);\n\t\t}\n\t\telse{\n\t\t\trecentDares.push(currentDare.id);\n\t\t}\n\t}\t\n }\n\n\t function startTimer(duration, display) {\n\t    let timer = duration, minutes, seconds;\n\t    setInterval(function () {\n\t        minutes = parseInt(timer / 60, 10);\n\t        seconds = parseInt(timer % 60, 10);\n\n\t        minutes = minutes < 10 ? \"0\" + minutes : minutes;\n\t        seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n\t        display.textContent = minutes + \":\" + seconds;\n\n\t        if (--timer <= -1) {\n\t\t\t\tif (buttons.childNodes.length>=7){\n\t\t \t\t\tremoveEvent()\n\t\t \t\t\tplayButton.disabled = false\n\t\t\t\t}\n\t        }\n\t\t}, 1000);\n\t}\n\n\t function coinFlip(duration, display) {\n\t    let timer = duration, minutes, seconds;\n\t    setInterval(function () {\n\t        minutes = parseInt(timer / 60, 10);\n\t        seconds = parseInt(timer % 60, 10);\n\n\t        minutes = minutes < 10 ? \"0\" + minutes : minutes;\n\t        seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n\t        \n\n\t        if (--timer <= -1) {\n\t\t\t\tif (buttons.childNodes.length>=7){\n\t\t \t\t\tremoveEvent()\n\t\t \t\t\tplayButton.disabled = false\n\t\t\t\t}\n\t        }\n\t        else if (timer == 3){\n\t        \tdisplay.textContent = display = (Math.floor(Math.random() * 2) == 0) ? 'heads' : 'tails';\n\t        }\n\t\t}, 1000);\n\t}\n\n//creates archive for all players of current game\n\tfunction dareArchive(currentDare) {\n\t\tpreviousDares.push(currentDare);\n\t}\n"]},"metadata":{},"sourceType":"module"}