{"ast":null,"code":"//const PROXY = \"https://cors-anywhere.herokuapp.com/\";\n//const OURL = \"https://double-dog-backend.herokuapp.com/\"\nconst URL = \"http://localhost:3000/\";\nconst adapter = {\n  //game\n  createGame: () => {\n    return fetch(`${URL}/games`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json());\n  },\n  getGame: () => {\n    return fetch(`${URL}/games`).then(resp => resp.json());\n  },\n  //players\n  getPlayers: game_id => {\n    return fetch(`${URL}/games/${game_id}/players`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(resp => resp.json());\n  },\n  createPlayer: (name, game_id) => {\n    return fetch(`${URL}/games/${game_id}/players`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(name, game_id)\n    }).then(resp => resp.json());\n  },\n  //player turns\n  getPlayerTurns: () => {\n    return fetch(`${URL}/player_turns`).then(res => res.json());\n  },\n  createPlayerTurn: (player_id, dare_id) => {\n    return fetch(`${URL}/player_turns`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        player_id,\n        dare_id\n      })\n    }).then(resp => resp.json());\n  },\n  //game turns\n  getGameTurns: game_id => {\n    return fetch(`${URL}/games/${game_id}/game_turns`).then(res => res.json());\n  },\n  createGameTurn: (game_id, player_turn_id) => {\n    return fetch(`${URL}/games/${game_id}/game_turns`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        game_id,\n        player_turn_id\n      })\n    }).then(resp => resp.json());\n  },\n  //dares\n  getDares: () => {\n    return fetch(`${URL}/dares`).then(resp => resp.json());\n  }\n};\nexport default adapter;","map":{"version":3,"sources":["/Users/marshoward/Development/code/double-dog-react/src/adapter.js"],"names":["URL","adapter","createGame","fetch","method","headers","then","res","json","getGame","resp","getPlayers","game_id","createPlayer","name","body","JSON","stringify","getPlayerTurns","createPlayerTurn","player_id","dare_id","getGameTurns","createGameTurn","player_turn_id","getDares"],"mappings":"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","sourcesContent":["//const PROXY = \"https://cors-anywhere.herokuapp.com/\";\n//const OURL = \"https://double-dog-backend.herokuapp.com/\"\nconst URL = \"http://localhost:3000/\"\n\nconst adapter = {\n//game\ncreateGame: () => {\n  return fetch(`${URL}/games`, {\n      method: 'POST',\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n    .then(res => res.json()) \n  },\n\n  getGame: () => {\n    return fetch(`${URL}/games`)\n    .then(resp => resp.json())\n  },\n\n//players\n  getPlayers: (game_id) => {\n    return fetch(`${URL}/games/${game_id}/players`,{\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n    .then(resp => resp.json())\n  },\n\n  createPlayer: (name, game_id) => {\n    return fetch(`${URL}/games/${game_id}/players`, {\n      method: 'POST',\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(name, game_id)\n    })\n    .then(resp => resp.json()) \n  },\n\n\n//player turns\n  getPlayerTurns: () => {\n    return fetch(`${URL}/player_turns`)\n    .then(res=>res.json())\n  },\n\n  createPlayerTurn: (player_id, dare_id) => {\n    return fetch(`${URL}/player_turns`, {\n      method: 'POST',\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({player_id, dare_id})\n    })\n    .then(resp => resp.json()) \n  },\n\n  //game turns\n    getGameTurns: (game_id) => {\n    return fetch(`${URL}/games/${game_id}/game_turns`)\n    .then(res=>res.json())\n  },\n\n    createGameTurn: (game_id, player_turn_id) => {\n    return fetch(`${URL}/games/${game_id}/game_turns`, {\n      method: 'POST',\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({game_id, player_turn_id})\n    })\n    .then(resp => resp.json()) \n  },\n\n//dares\n  getDares: () => {\n  \treturn fetch(`${URL}/dares`)\n  \t.then(resp => resp.json()) \n  }\n}\nexport default adapter;"]},"metadata":{},"sourceType":"module"}